Используемые промты для LLM (на английском языке):
"How can I optimize a SQL query to fetch 3,000 rows from a table with 50,000 rows without changing the database structure?"
"What indexing strategies can improve the performance of a SELECT query in SQL Server?"
"How to ensure SQL Server uses indexes effectively for a SELECT TOP query?"
Шаги по оптимизации запроса
Создание индексов: Создание индексов на полях, используемых для сортировки и соединений, может значительно улучшить производительность запроса.
Использование эффективных условий сортировки и фильтрации: Это может помочь избежать полного сканирования таблицы.
Оптимизация плана выполнения запроса: SQL Server автоматически выбирает наилучший план выполнения запроса, но иногда можно вручную направить его с помощью подсказок (hints).


Оптимизация функции dbo.F_WORKS_LIST()
Создание индексов
Создадим индексы на поле DateCreated таблицы Works, что поможет ускорить сортировку и фильтрацию данных

Также создадим индексы на внешние ключи в таблицах WorkItem и Analiz для ускорения соединений


Обновление функции dbo.F_WORKS_LIST()
Изменим функцию dbo.F_WORKS_LIST(), чтобы использовать новый индекс и обеспечить быстрый доступ к данным



Оптимизация запроса без изменения структуры базы данных возможна за счет создания индексов и изменения способа выполнения запроса. В данном примере создание индексов на ключевых полях и изменение функции dbo.F_WORKS_LIST() для использования индекса на поле DateCreated позволяет значительно улучшить производительность запроса, обеспечивая выполнение запроса за 1-2 секунды даже при значительном объеме данных.
