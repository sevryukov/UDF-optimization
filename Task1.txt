Пример решения задания с использованием LLM GPT4-Omni. На вход подавался полный скрипт (контекст модели в 128к токенов это позволяет сделать), а также системный промпт. 
В результате модели частично удалось решить задачу, хотя довольно много фактов она всё же исказила 
(например, об отсутствии индексов для некоторых столбцов), а также “оптимизировала” то, что её не просили.

Системный промпт:
Ты – опытный специалист по работе с базами данных. 
Тебе на вход будет подан SQL скрипт для БД MS SQL. 
Твоя цель – проанализировать скрипт функции получения списка заказов (F_WORKS_LIST) и связанные с ней объекты, 
перечислить выявленные недочёты и потенциальные проблемы производительности. 
Полный скрипт: [скрипт]


Пункты ответа модели, с которыми я согласен:
•	Функция F_WORKITEMS_COUNT_BY_ID_WORK вызывается дважды в основном запросе (для WorkItemsNotComplit и WorkItemsComplit). 
    Это приводит к выполнению двух подзапросов для каждой записи в таблице Works, что может значительно снизить производительность при большом объеме данных.
•	Для улучшения производительности, целесообразно добавить индекс на поле is_group в таблице Analiz.
•	В запросе функции F_WORKS_LIST отсутствуют индексы на поле IS_DEL, которое используется в фильтре.
•	Использование функций в столбцах SELECT приводит к тому, что каждая функция будет вызвана для каждой строки результата. 
    Это в свою очередь значительно замедляет выполнение запроса при больших объемах данных.
•	Операции конкатенации строк и функции RTRIM и REPLACE в таблице F_EMPLOYEE_FULLNAME могут быть ресурсоемкими при больших объемах данных. 
    Поэтому следует рассмотреть возможность хранения полного имени сотрудника в отдельном столбце, чтобы избежать необходимости выполнения операций конкатенации при каждом запросе.
