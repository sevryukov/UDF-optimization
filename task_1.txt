# Проблемы производительности в функции dbo.F_WORKS_LIST:

## Многократное использование скалярных функций в SELECT:
-- Функция dbo.F_WORKITEMS_COUNT_BY_ID_WORK вызывается дважды для каждой строки в результирующей выборке из таблицы Works, что приводит к дублированию запросов и значительно увеличивает время выполнения.
-- Функция dbo.F_EMPLOYEE_FULLNAME вызывается для каждой строки, что может быть ресурсоемким, особенно при большом количестве строк.

## Неэффективное соединение:
-- LEFT OUTER JOIN с таблицей WorkStatus может быть не оптимальным. Если в таблице WorkStatus много строк, а в Works используется только ограниченное количество статусов, то INNER JOIN может быть эффективнее.

## Отсутствие индексов:
-- Отсутствуют индексы для полей, используемых в условиях соединения (Works.StatusId = WorkStatus.StatusID) и фильтрации (WORKS.IS_DEL <> 1).

## Неоптимальное использование CASE:
-- Условие CASE для вычисления Is_Print можно упростить.

## Сортировка:
-- Сортировка order by id_work desc может быть ресурсоемкой при большом количестве строк, особенно если индекс по id_work не покрывающий.

# Анализ функции dbo.F_WORKITEMS_COUNT_BY_ID_WORK:

## Неэффективный подзапрос: 
Использование NOT IN с подзапросом (select id_analiz from analiz where is_group = 1) может быть ресурсоемким, особенно при большом количестве строк в таблице analiz. Лучше использовать LEFT JOIN с проверкой на NULL.

## Отсутствие индексов: 
Отсутствует индекс по полю workitem.id_work, что может замедлять фильтрацию.

## Многократный вызов: 
Функция вызывается дважды с разными значениями параметра @is_complit, что приводит к дублированию запросов.

# Анализ функции dbo.F_EMPLOYEE_FULLNAME:

## Вложенный вызов функции: 
Функция вызывает другую функцию dbo.F_EMPLOYEE_GET, что добавляет накладные расходы.

## Несколько SELECT запросов: 
Используются два SELECT запроса для обработки случаев с пустым ФИО. Логику можно упростить и использовать один запрос.

## Отсутствие индексов:
Отсутствует индекс по полю Employee.ID_EMPLOYEE, что может замедлять поиск по идентификатору сотрудника.

## Предложения по оптимизации:

dbo.F_WORKITEMS_COUNT_BY_ID_WORK:
Заменить NOT IN на LEFT JOIN с проверкой на NULL.
Добавить индекс по полю workitem.id_work.
Объединить два вызова функции в один запрос с использованием условной агрегации (например, SUM(CASE WHEN is_complit = 0 THEN 1 ELSE 0 END)).

dbo.F_EMPLOYEE_FULLNAME:
Избегать вложенного вызова функции dbo.F_EMPLOYEE_GET, если это возможно.
Использовать один SELECT запрос с COALESCE или CASE для обработки случаев с пустым ФИО.
Добавить индекс по полю Employee.ID_EMPLOYEE.
